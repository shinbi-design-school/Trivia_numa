package com.design_shinbi.trivia_numa.model.programming;

import com.design_shinbi.trivia_numa.model.Quiz;

public class Mysql extends Quiz {
	
	
	private static String[] questions = {
	        "データベースは何のために使いますか？",
	        "テーブルはデータをどう表現しますか？",
	        "SQLは何のために使う言語ですか？",
	        "主キーは何のために使いますか？",
	        "外部キーは何を示しますか？",
	        "データを取得するためのSQL文はどれですか？",
	        "新しいデータをテーブルに追加するためのSQL文はどれですか？",
	        "データを削除するためのSQL文はどれですか？",
	        "データベースの一連の操作をまとめて扱う単位を何と呼びますか？",
	        "特定のクエリの結果を仮想的なテーブルとして保存することを何と呼びますか？"
	    };
	
	 private static String[][] options = {
			 {"データの保存", "プログラムの実行", "ウェブサイトの表示", "画像の編集"},
			 {"行と列", "グラフ", "文章", "画像"},
			 {"データベースの操作", "ウェブサイトのデザイン", "プログラムの作成", "ネットワークの管理"},
			 {"データを一意に識別する", "データを暗号化する", "データを削除する", "データを圧縮する"},
			 {"他のテーブルへの参照", "データの更新", "データの削除", "データの追加"},
			 {"INSERT", "DELETE", "UPDATE", "SELECT"},
			 {"SELECT", "DELETE", "INSERT", "UPDATE"},
			 {"INSERT", "SELECT", "UPDATE", "DELETE"},
			 {"クエリ", "トランザクション", "ステートメント", "セッション"},
			 {"ストアドプロシージャ", "ビュー", "トリガー", "インデックス"}
	 };
	 
	 private static String[] answers = {
		        "データの保存",
		        "行と列",
		        "データベースの操作",
		        "データを一意に識別する",
		        "他のテーブルへの参照",
		        "SELECT",
		        "INSERT",
		        "DELETE",
		        "トランザクション",
		        "ビュー"
		    };
	 private static String[] explanations = {
		        "データベースは、データを効率的に保存、管理、検索するためのシステムです。MySQLのようなデータベース管理システム（DBMS）は、大量のデータを整理して格納し、必要な情報を迅速に取り出すことを可能にします。データベースは、例えば顧客情報や製品データなど、さまざまなデータを保存するために使われます。",
		        
		        "テーブルは、データベース内でデータを保存するための構造です。テーブルは「行（レコード）」と「列（カラム）」で構成されます。各行が1つのデータエントリ（レコード）を表し、各列がそのデータに関連する属性（カラム）を表します。例えば、顧客テーブルでは、名前や住所、電話番号などが列にあたります。",
		        
		        "SQL（Structured Query Language）は、データベースを操作するための言語です。SQLを使って、データベース内のデータを検索（SELECT）、追加（INSERT）、更新（UPDATE）、削除（DELETE）などの操作を行います。SQLは、データベースの管理や運用において不可欠なツールです。",
		        
		        "主キー（Primary Key）は、テーブルの各行を一意に識別するためのカラムまたはカラムの組み合わせです。主キーは重複した値を持つことができません。例えば、顧客情報を管理するテーブルでは、顧客IDが主キーとして使われ、各顧客を一意に識別することができます。",
		        
		        "外部キー（Foreign Key）は、他のテーブルの主キーを参照するカラムです。これにより、複数のテーブル間でリレーションを作成できます。例えば、注文テーブルが顧客IDを外部キーとして持つことで、各注文がどの顧客によって行われたかを示すことができます。外部キーを使うことで、データの整合性を保つことができます。",
		        
		        "SELECT文は、データベースからデータを取得するためのSQL文です。例えば、顧客情報を取得する場合、SELECT * FROM customers;のように書くことで、「customers」テーブルからすべてのデータを取得できます。SQLでは、SELECT文を使って必要なデータだけを抽出することが可能です。",
		        
		        "INSERT文は、テーブルに新しいデータを追加するためのSQL文です。例えば、顧客テーブルに新しい顧客情報を追加する場合、以下のようなSQL文を使います。\n"
		        + "\n"
		        + "sql\n"
		        + "コードサンプル\n"
		        + "INSERT INTO customers (name, email) VALUES ('John Doe', 'john@example.com');\n"
		        + "\n"
		        + "これにより、顧客テーブルに新しい行が追加されます。",
		        
		        "DELETE文は、テーブルからデータを削除するためのSQL文です。例えば、顧客テーブルから特定の顧客を削除する場合、以下のようなSQL文を使用します。\n"
		        + "\n"
		        + "sql\n"
		        + "コードサンプル\n"
		        + "DELETE FROM customers WHERE id = 1;\n"
		        + "\n"
		        + "このSQL文は、顧客IDが1のレコードを削除します。条件（WHERE句）を指定しないと、テーブル内の全てのデータが削除されるため注意が必要です。",
		        
		        "トランザクションは、データベースで一連の操作をまとめて処理する単位です。トランザクションを使用することで、複数の操作がすべて成功するか、すべて失敗するかを保証できます。例えば、銀行の振込処理では、送金と受取が両方成功した場合にのみ処理が確定し、途中でエラーが発生した場合は、すべての操作が元に戻されるようにします。トランザクションは、BEGIN TRANSACTION、COMMIT、ROLLBACKなどのコマンドで制御します。",
		        
		        "ビューは、特定のクエリの結果を仮想的なテーブルとして保存する機能です。ビューは実際のデータを持たず、SQLクエリによって定義されます。例えば、特定のカラムだけを選択して表示するためにビューを使うことができます。ビューを使うことで、複雑なクエリを簡単に再利用したり、ユーザーに必要なデータのみを提供したりすることができます。ビューは、以下のように作成できます。\n"
		        + "sql\n"
		        + "コードサンプル\n"
		        + "CREATE VIEW customer_view AS SELECT name, email FROM customers;"
		    };
	 
	 public Mysql() {
			super(Mysql.questions, Mysql.options, Mysql.answers, Mysql.explanations);
		}

}
